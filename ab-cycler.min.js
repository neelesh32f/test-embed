!function(){"use strict";class t{constructor(t={}){this.config={apiEndpoint:t.apiEndpoint||"https://https://ff09-223-185-131-191.ngrok-free.app",interval:t.interval||3e3,animationDuration:t.animationDuration||300,initDelay:t.initDelay||1e3,...t},this.variations=null,this.currentVariationIndex={},"loading"===document.readyState?document.addEventListener("DOMContentLoaded",(()=>this.waitForScriptsAndInit())):this.waitForScriptsAndInit()}waitForScriptsAndInit(){setTimeout((async()=>{console.log("Calling things.."),"complete"!==document.readyState?window.addEventListener("load",(()=>this.init())):await this.init()}),this.config.initDelay)}async init(){try{await this.fetchVariations(),this.variations&&Object.keys(this.variations).length>0?this.startCycling():console.log("No variations available for current page")}catch(t){console.error("Failed to initialize ABCycler:",t)}}async fetchVariations(){console.log("Fetching variations...");try{if(window.location.href.includes("/products/")){const t=window.location.href.split("/products/")[1].split("/")[0];console.log("Product slug: ",t);const i=await fetch(`${this.config.apiEndpoint}/planttherapy/products/${t}`);if(!i.ok)throw new Error(`HTTP error! status: ${i.status}`);const n=await i.json();n&&"object"==typeof n&&Object.keys(n).length>0?(this.variations=n,console.log("Variations received: ",this.variations),Object.keys(this.variations).forEach((t=>{this.currentVariationIndex[t]=0}))):(console.log("No valid variations received from API"),this.variations=null)}else console.log("Not a product page, skipping variations fetch"),this.variations=null}catch(t){throw console.error("Failed to fetch variations:",t),this.variations=null,t}}startCycling(){this.variations&&"object"==typeof this.variations?Object.keys(this.variations).forEach((t=>{const i=this.variations[t];Array.isArray(i)&&i.length>0?this.cycleElement(t):console.log(`No valid variations for selector: ${t}`)})):console.log("No variations to cycle through")}cycleElement(t){const i=document.querySelector(t);i?setInterval((()=>{const n=this.variations[t];if(!Array.isArray(n)||0===n.length)return;const o=this.currentVariationIndex[t],e=(o+1)%n.length;this.applyVariation(i,n[o],n[e]),this.currentVariationIndex[t]=e}),this.config.interval):console.log(`Element not found for selector: ${t}`)}applyVariation(t,i,n){t.classList.add("ab-cycler-transition"),setTimeout((()=>{this.updateElement(t,n),t.classList.remove("ab-cycler-transition")}),this.config.animationDuration)}updateElement(t,i){i.html&&(t.innerHTML=i.html),i.text&&(t.textContent=i.text),i.attributes&&Object.entries(i.attributes).forEach((([i,n])=>{t.setAttribute(i,n)})),i.styles&&Object.assign(t.style,i.styles)}}window.createABCycler=function(i){return new t(i)}}();
//# sourceMappingURL=ab-cycler.min.js.map
